%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 2 36 252 118 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: prec.eps
%%CreationDate: Wed Jun 19 15:36:00 2024
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW Версия 25.0.0.230
/EpsFile true def
%%BeginResource: procset wCorel25Dict 25.0 0
/wCorel25Dict 300 dict def wCorel25Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Text support
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch 0 1 $fe length 1 sub{/encodingIndex xd dup
$fe encodingIndex get eq{$fe encodingIndex/.notdef put}if}for put 1 add}ifelse
}forall pop}if dup 256 dict dup/$met xd/Metrics exch put dup/FontMatrix get 0
get 1000 mul 1 exch div 3 index length 256 eq{0 1 255{dup $fe exch get dup
/.notdef eq{pop pop}{5 index 3 -1 roll get 2 index mul $met 3 1 roll put}
ifelse}for}if pop definefont pop pop}bd/CorelIsValidCharpath{pathbbox 3 -1 roll
sub abs 0.5 ge 3 1 roll sub abs 0.5 ge and}bd/@ftx{{currentpoint 3 -1 roll(0)
dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix
CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/gradient_fill ld @ftx}{$fil 3 eq{/@@txt
/@Pf ld @ftx}{$fil 4 eq{/@@txt/output_shading_gradient ld @ftx}{FillOverprint
safe_setoverprint FillColor/separate_set_color dexec{show}{pop}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix
currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint
safe_setoverprint OutlineColor/separate_set_color dexec{{currentpoint 3 -1 roll
(0)dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat
stroke @gr @np stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr
@st}bd/@t@a{dup @gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}
def}bd/o{/t{pop}def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm
setmatrix/$ttm matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll
m $ttm concat ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd
/@l{}bd/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null
def/_bithibyte 0 def
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel25Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%BeginResource: font ArialMT
%!FontType1-1.0: ArialMT 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /ArialMT def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 32 /space putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B18D54F9E0F0F9280A6425EED2E2B7BB29DA8D3D977AE0F4D887F72309ABE6CB09B8D1F560053EF45B132D9
94234037516D77B55487FDC01EF1886D5E76B3FEA52550B042A29449DF2E11DC3397A75D6380F00B384338F55423CD087C6BBA8E698119FAD8689298FB6C0B33
BF675565E8A54ECFEE7A22D224C31A5AEA5779E3B8580F9BB18999AEADA6E5AABE275DE256946EE2C1C7EA3E5BE5CB77CFFE74DC051078D294E3DF34446740
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 
750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 278 
278 355 556 556 889 667 191 333 333 389 584 278 333 278 278 556 
556 556 556 556 556 556 556 556 556 278 278 584 584 584 556 1015 
667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 
778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 
556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 
556 333 500 278 556 500 722 500 500 500 334 260 334 584 750 865 
542 222 365 333 1000 556 556 556 1000 1057 333 1010 583 854 719 556 
222 222 333 333 350 556 1000 750 1000 906 333 813 438 556 552 278 
635 500 500 556 489 260 556 668 737 719 556 584 333 737 278 400 
549 278 222 411 576 537 333 556 1073 510 556 222 667 500 278 667 
656 667 542 677 667 923 604 719 719 583 656 833 722 778 719 667 
722 611 635 760 667 740 667 917 938 792 885 656 719 1010 722 556 
573 531 365 584 556 669 459 559 559 438 584 688 552 556 542 556 
500 458 500 823 500 573 521 802 823 625 719 521 510 750 542 ]
CorelDrawReencodeVect /_R1336934514926-ArialMT /ArialMT Z

%%BeginResource: font ArialMT
%!FontType1-1.0: ArialMT 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /ArialMT def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /pecyrillic putdup 34 /afii10080 putdup 35 /afii10077 putdup 36 /afii10094 putdup 37 /afii10073 putdup 38 /vecyrillic putdup 39 /afii10065 putdup 40 /tecyrillic putdup 41 /iecyrillic putdup 42 /afii10076 putdup 43 /afii10074 putdup 44 /afii10078 putdup 45 /afii10093 putdup 46 /afii10090 putdup 47 /becyrillic putdup 48 /afii10092 putdup 49 /ucyrillic putdup 50 /escyrillic putdup 51 /ercyrillic putdup 52 /afii10091 putdup 53 /afii10079 putdup 54 /afii10097 putdup 55 /decyrillic putdup 56 /afii10075 putdup 57 /afii10072 putdup 58 /afii10089 putdup 59 /gecyrillic putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexecA22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B19FD262188F22F01F71E56686F0694F0A1D10B9EEED41D45A11E2AD0C7556834C9670872364371E1651FDB
3273E264EACB4E59E5DFA4935320F9664B686FF94BF1C2643ECB96804E9D73A80A50D551F2C977FEDD2A7941FA5ED0FDE4C374D7192C915E0636703F9DAB2112
EECD4FA700A342354AA845A0F8EC8D57CFF551FE0E8DCE4234CACA363E6527EDCA7B5EECFF3F4F64F3E0E43707531BFF1255FFEFCA73755CD1AF78DFB4A62629
C11C38CEA6E384F56458160ED09FC58ACD0D45F81599BC39BB7F7E439BD7195AE64BC298093D8FC1F96C74597FE5977296B65087835797418FB978B281BED4F0
39C12F3F6568BA2B94ECAFDB7415376FC32EFA1A6E84B401E63A4B24CBFEC0139FD68FFA160A9F4461982496AF593579B1B4107214F1AAA1039A83AD3879FDF1
B2FA0C01A0161E2A4E7704AD5886BD0F439A25B9F6C8110A7043119706DCAB89DAC68CA3B1DBB7D18FA2A56705940D293B14FA967B168A45298AE98768473F40
375017BDCAFE8F456AF7DBD7BDA1E4A6ED1F65D8BC012E50D33F4057E04DDC31B24C97BCA47758CC796B59057EC7C9FF3FA2063CC50FDFEDAD022179E9E395E1
523696A72B35613E457F93BDD53295DA8864BF60F3BE4AD810C93B75BED67E921A1AF00041FBBAD24D3CE7B917E161143964458BF5E636FE9573DF1BF1F73920
E28553EAB19298EB0F05546D08815893EE4E065AF14A312692AFF917C8AD6E9BFB46A7526CDA06C2B1B077C7C83841C0C1E692B63C579DAA7484C8C7D1307DD5
7F35B89B0D41E6A331E40C09974F96314A555247114D58EC94C75B71EA187A1205B2184951D3B1CB67236BD34016AC2BD2BC4DEEC9AB5E1B4EC327CC3E8385FC
4FF6CC12A2208E9C7C62689433EB306F4506F9EF94F8CEDEA098EF7687978439743517A0B113D25C01C0A254FC266971A5522CFDC81E02C33C8018FED3C00AA1
0701198B0470D592626839C84CDEA22D8E30A92DC675BBE02066DCC7A3891067890DED61FD1F29F015F20CFC01E88B38D820FB7F3600CF56DD0CE48895F649DB
068CD06C7A4F2242E7DF6654A1E1593D8E9C9F934003CC09F6AC53208F97664768D959C98E12978C2BD9BC5E087BF1F217BDA5625AA23DE1D1A7276A7AD1BAF0
3CCEEE6C7A62C468EDAA449210834DBAB268777F097C9CC84295472D2B630C162A2D769D2C5644AD4D5CFA5CA46D7DB7390C4EA2CB7ADD2459B68A1E49DB40CE
666D9B39DA532A775A0F47E6035EF666D001FAB42E5FBCEFF0EC8DB76A389923640C6FF10CF8B8623CE71F8F3B01C8C49735D90ADABACA26F3A31DFA3359277A
12C8F5B3180901234EB9CAAA016855FFD95B2CD6DC2CD039EE84B612841C222E927B252DD33200EC0AE0BCB5F12709DC6D5FD269463D957FE9DD5752062893F7
4D213C9189DA8038543308BCB5AA7ABD6AC8CCF041A1177F3CE1C243EEF5C11A96ACB7FBDD013B2D9EF63897298D6AE209A36BB453C7532B37FE712D9E8A43E6
107C9AEAD2BF66E18C43D1513282271D1EB95B5A0714F4DC4419EE1DD4BD2C3CDEECA8EDD3E37E3CB1A8B58098831DABC681FECCD530B65385234FC8414BAC85
9E3F2C0433EB7DA0C25BC4DFDD1ADF19D0A2AD94564F47618DE43EDE96DFEF6B48BC9C73852EFBFA60790827C4720884D2D0978601767AA4613D596CC09A998D
9E34EFA3A1C600A4607348711BEEEF3F143C9744734292EE25B94E9799A530A6047ED1EE8ED4D62F29A7D0B9A222EFE8DB545704B5BFC4A17EB9DA47D26B268D
396160459D44E779D458C217CAD603D018AAAAF30B1892491642291157921DBC4A559DA0AE1D590C379B1A5070E79225867187CD7F2C42FD7FB87094DCAAC999
CA0DEF264C9C0A10DD926D409503796EA0EC9DAAC9EE06E0B4A35DA57EF35FD07E771FF18E1A3086EEA19F4B4E516B15DEFADE92237E4F321F04FEE1FA3C043C
2978DE0F365FDABEE901B54E897403CDB30C5624F80F0272F4FB1452CED15A65722CDBA6B9D537ED69DD214EC65DA232D710077E5E23EDB99103EC4597EA3AFB
FAB5EAA8A0217C3F0C445427B56FC72200CB5320D25378DFAB0239A5C883B9E6013FA4953C3D6A3D165EC60A2D5CF30A5E64CEA36F0AA7A333AE019D96AEA082
B3D077FE157FDB08DF9639562CD0D9BFCEFECD4BF1E1E140D96D11EDB74C71F552AA4EB143E19AFA68C0BFC8693E9E378180AD3DF1BD59A31DE049B866229CA0
35239BE0D5920CC3EE74F60C882814E65064F46119FBD4530D5B5B289B1B0F7B54318C635232144D3A29510327E9E76CCDBB83F9BA5F532F8FEEC35A57287EB6
A2C7531A0A46B9AE17C65740B93885EEAACF9C4A3937BA0A44C42DAB3294E69578411E2675FD788748F1EF13BDE2275A73480F57C344C848F5E2E373EBAA92D7
24F33EA6DA832CD60602DEA8A51F23F380FAD6656067DC5518423F69F4A510BC6704647F917162B0DA128A1CE04F08DE26EE05805D5CCE864E6EDA405586518D
3E0C138CF794D5D8E66E9FDF66941F5E0495E2E97104EA4D13FCFDBC70A41F0C13CF992EC76E21BC64EFFA23A4B3AD9A22D15D8724959963E48DA3AF159BE63F
9332BBB013CA744E91F3390714A586AD56154FB3F06184BBCF2C392E4A5A659065044D925FCF8438C518640AB459ADFF7B51846D90179177D0AA95E7612585D5
38D7D878101B45BE17A368AD41B00026F3F12B3BA6EB8D2E5795AEC408B1F281026677D9AE6048514EA33B01A23BE2294324BFA52D9C2406A7CAF21E8208252D
04659BE569C0EE5096757DF5C4DD955864B0CE5F6D1B1747CB3A181A140411FC81842B847B0A89DB1031C5C321F0AF82E47391BCED971EC81140D48135A25EA8
2526AF67965F2DD12E82E57F9E93D27A902592C0636A9083F6FF5A73C15B926AE5FECF674C92F8FFDFF4B851E7BC9ADB9725479B9F22F50BAAC0396C591B381B
25A0ABC09879A9D485FE717EEDF843641CD5649833E2E1D581B30D4CB61921D44EF660F2B35AFE1AA932F4732B125B9D9232E248AB9DADACCD2096937B8F7A7D
0553BD45CC917677FF2C4FDDFDA2CD5779AA0D09F305019C4C2987F5F76B7CAB40F248A54A6C30E25697C5799D596F52D3EA354A62D7E1A981DE862C0F8D6C1A
1DF8518E8410406FFCA08F39A3E242BA08FC3E7C96E4EBD23CD7C7F1023969FF1B60BF733663BECC8DD2C43DB8304C42539222D435F65A764731F9BEF7BBF9C3
888C5E4209AAE9A0A0BC9E8FF5505A24CA5B9E06A8AF835435F2FA6CD1BCCE117C2B00545465FDE16F075AF1F43E2613D92E09DA19BA21FCD80775ACBABE87F1
3E4DEE8999EEF97EF91DA0AAF612E23C34611B188F4F60CF1C917AF4DE63A3158A4554E9E55CA4867A89BD4B6516A442CB80B647903782CCE5DF45535344389E
1F66D7754A69610F083C93C5E84DBF6B69E0702E176C8DEA2BD94EAB2F37B749AE3B13370F3D60BCC30B79A75FF8C624AC3AEADB68C6459A2F0DD63B5F23FFE2
3270DA0F530C6D9C07E2C359B735C9AC99C052DDA656741402828D90D10788B33CBC8EEF628005D1BFB70E215B3D64B991C2EF7D2D22896F9CE63CDF78B181AA
F229B45BE3134E87E711BED27C4128A2F59744B460EF3EA8CA96EC47A9C25FA26500EE7CA4F9408BBD7811F4E775D6A977466AE341245901384D2920A06AD651
EE251B8D9191AFD11D2AC5FF0BAF22C9AFDFA87CABB3F1E54B928902D36D4904F9DD7FCD049606078636C1523FB32E855F512561CF3B0F8937E558DED6F46981
915686B945C95B03C1EA8F57600C8341C9EDEDD9F07B209F1B91F67AB3A6ED2819326E7CBFF3760F5FB7039762DDFFC9F60746CF0EDB5A965B1902B6BF038FBD
1F8E0D769742858EE3F131723D7C8326A7CD9A91797A5DF662C0BC479CBBF491E7CCDB6614B95B4E2D7172EC98E3352BDDFC12AD707F990BB4076F962C89077C
429C39D1B12C98178080DEE63C94D95051D084C926410DB0E7445534A57EEB519156BD76E385EFCF9330126C9ADCF2EECA3D7A68E170C3E16F3DBE65A28BA3C1
66A50A52699D71A656604C5E3B4A021D27B8DB64AC6BA11B0864931AEF482138D58BA286D573A98CCCF1FDA518C35B102F826E0F9B20985950B144C3B4852755
D3236D7F3F3176DDD5C9589D5E66211B80D3A475FC55940B4A2197D3B2CBF7E90EF367FAE66145DE3A4F85DE70B222E8AD363A3D1BC5BEA159EA2B0FC5AE5812
91CECFE636FF39F29164B9464E241211F2278E0C95D01FA93ECF03C223C8891EEAC7CFA72A005A9ABD869B4FDD8A62C0BB5F2E0068D82D89A84D4422F0A85A91
F25994ED92C09B521ABB01C414A3AAFD1380522A35A92812D09A3F15B3E2AAC6B09D59C5ED2A6B8D23680791ED8417A24504E5A5D4F639E9CDC32FB255E33D3F
188D750CC8C16A86739C293F0348865777E6E92A9D01412BFCDF0241B40FEDF17B55202ADE388E961BCC13780A83B3C3FEEEB7DABDB72CE1400D6805E1E01E21
17E349AB06E3F3E72C4F6064D2C547E0ABAEA0A91EFE8F8B43AC58F7409CF52FD767EF4374EBFAE46100A5D51508C8CB6854A3B314E2D501BEF5B1F28050BE0A
9DEA4215C49CE5EDFB384CEA7653CAD6CCEE554691B966122B5D5FB881731C812C4E695F8B2FF7FDC85EC6008DC9ACE2EE173C82E110A82F29ECE79C18BC6EF4
55369D75E272977217539E3E67809B4449A1F98CC875466BD5F3BAFDCD6CC57EE6E215C210BBD6FF797154CEBA91D6CB41D765D1E69A88DAB12B94541F1A02ED
E6BFDA050598C70E719174073719CC9415EE586A8ABB6A9279AD7400663CECCA4D99604D135D99804EB89DEB31B41C5310F2F227FE67E7426FF0E9CA0BBDDFC4
C5ECE69FD40757E04200F9AAE9297A95F409D37993B08D89375F1F19D20D3289743D78F8D33D09F6DD89CF532B2B06C9EC3B3444B28413878CD690DF14DE41E0
965056824A2CC95887A71AEDE1303ECDCB4439ECE7D2B6ABBE52CA1610E54FCF15B0558847DD7F7457DFA8C86C42C4278578DDF610361A2967245003D45BED0D
1D41EE0CCAF680E668EBAA8384220E15050C542D0079B66F226F61812078BD0492DBA6C0207B9936F9F726AED704EE6172ACEC04902A429E08DEE151B5C330D0
818D091CDDC759DC06E96E67BE0F603FD42C67BE6D05BABE25A236C3EA3981F2E1BAA6B9AF1CD9A89CD8756F8601EA89C918C40EE24FCDDB98B637D87F07BB0A
D8E47688643A23D61EB05CA659657B6114D94F4B59C94235A422B83C6BCEE201EECF256FF3AE8030EC39E9638A17408DCEFF15B8360AB4FB649A8700C4EEECC2
5335B6AA7FA475F6D476B4F8E1C3CA8C37677D140A581E83E6F76E72AC3D0F30CA231CBBDABA3D2D306A8656B8557FE832707C380A8CDE135124DDF28F4B7E31
789CB7EBE5CD34031BFA1C6E6E08410B07F343056982512ACC576A572601CA50A776B8267D4E53D3A055DFFC2E68AF599B10656A5551F27B5464844D7B1F9510
4688A8CC2F7C76D29FFF2A37066A76E9CCCAF0E5DFBF25375FEDD2778099BADA40CDB4F189F168637B72B39D00314091BF697AFA54C292324CC7390DAB9BC908
3798A0A651986DC0162C7E611FC71C319FA53F25D7573A33BE6FC6277DD9E27900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
/CorelDrawReencodeVect-ArialMT [16#21/pecyrillic 16#22/afii10080 16#23/afii10077 16#24/afii10094 16#25/afii10073 
16#26/vecyrillic 16#27/afii10065 16#28/tecyrillic 16#29/iecyrillic 16#2a/afii10076 
16#2b/afii10074 16#2c/afii10078 16#2d/afii10093 16#2e/afii10090 16#2f/becyrillic 
16#30/afii10092 16#31/ucyrillic 16#32/escyrillic 16#33/ercyrillic 16#34/afii10091 
16#35/afii10079 16#36/afii10097 16#37/decyrillic 16#38/afii10075 16#39/afii10072 
16#3a/afii10089 16#3b/gecyrillic ] def
[ 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 
750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 278 
542 556 584 521 459 531 556 458 556 438 559 688 719 802 573 625 
500 500 556 823 552 542 584 559 669 521 365 584 584 584 556 1015 
667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 
778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 
556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 
556 333 500 278 556 500 722 500 500 500 334 260 334 584 750 865 
542 222 365 333 1000 556 556 556 1000 1057 333 1010 583 854 719 556 
222 222 333 333 350 556 1000 750 1000 906 333 813 438 556 552 278 
635 500 500 556 489 260 556 668 737 719 556 584 333 737 278 400 
549 278 222 411 576 537 333 556 1073 510 556 222 667 500 278 667 
656 667 542 677 667 923 604 719 719 583 656 833 722 778 719 667 
722 611 635 760 667 740 667 917 938 792 885 656 719 1010 722 556 
573 531 365 584 556 669 459 559 559 438 584 688 552 556 542 556 
500 458 500 823 500 573 521 802 823 625 719 521 510 750 542 ]
CorelDrawReencodeVect-ArialMT /_R1336934514926-ArialMT-1 /ArialMT Z

%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 841 595
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
2.31137 36.25739 251.30381 117.00879 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
2.31137 36.25739 m
251.30381 36.25739 L
251.30381 117.00879 L
2.31137 117.00879 L
2.31137 36.25739 L
@c
F

@rax %Note: Object
9.02665 94.52721 22.45663 109.24923 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
22.45663 101.88822 m
22.45663 105.95367 19.45020 109.24923 15.74164 109.24923 c
12.03307 109.24923 9.02665 105.95367 9.02665 101.88822 c
9.02665 97.82277 12.03307 94.52721 15.74164 94.52721 c
19.45020 94.52721 22.45663 97.82277 22.45663 101.88822 c
@c
B

@rax %Note: Object
2.31137 50.36230 29.17162 94.52891 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
15.74164 94.52891 m
15.74164 69.99307 L
15.74164 89.62016 m
2.31137 89.62016 L
15.74164 89.62016 m
29.17162 89.62016 L
15.74164 69.99307 m
2.31137 50.36230 L
15.74164 69.99307 m
29.17162 50.36230 L
S

@rax 5.64831 43.79244 25.67877 46.08142 @E
[0.00021592 0.00000000 0.00000000 0.00028346 15.60722187 43.83886522] @tm
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
e
/_R1336934514926-ArialMT-1 14926.00000 z
-47108 0 (\041\042) @t
-31053 0 (\043\044\045) @t
-7891 0 (\042\046) @t
8174 0 (\047) @t
16147 0 (\050) @t
22816 0 (\051) @t
30622 0 (\043\044) @t
T
@rax %Note: Object
124.52457 106.34145 139.19811 106.34258 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
124.52457 106.34202 m
139.19811 106.34202 L
S

@rax %Note: Object
138.72813 105.10753 140.60835 107.57594 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
140.60835 106.34202 m
138.72813 105.10753 L
139.19811 106.34202 L
138.72813 107.57594 L
140.60835 106.34202 L
@c
B

@rax %Note: Object
64.35808 97.43811 124.52457 115.24592 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
64.35808 97.43811 m
124.52457 97.43811 L
124.52457 115.24592 L
64.35808 115.24592 L
64.35808 97.43811 L
@c
B

@rax 77.72343 104.30731 111.07077 108.29707 @E
[0.00021592 0.00000000 0.00000000 0.00028346 94.30716208 105.19571046] @tm
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
e
/_R1336934514926-ArialMT-1 14926.00000 z
-77776 0 (\052) @t
-71079 0 (\043\053\052 \054\055\056\053 \041\042 \042\057) @t
38982 0 (\060\051\052) @t
63309 0 (\050) @t
70312 0 (\061) @t
T
@rax %Note: Object
124.52457 76.63238 139.46683 76.63351 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
124.52457 76.63294 m
139.46683 76.63294 L
S

@rax %Note: Object
138.99685 75.39902 140.87707 77.86743 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
140.87707 76.63294 m
138.99685 75.39902 L
139.46683 76.63294 L
138.99685 77.86743 L
140.87707 76.63294 L
@c
B

@rax %Note: Object
64.35808 66.05433 124.52457 87.21184 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
64.35808 66.05433 m
124.52457 66.05433 L
124.52457 87.21184 L
64.35808 87.21184 L
64.35808 66.05433 L
@c
B

@rax 66.77065 74.73345 121.83874 78.67672 @E
[0.00021592 0.00000000 0.00000000 0.00028346 94.30716208 75.57523341] @tm
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
e
/_R1336934514926-ArialMT-1 14926.00000 z
-128502 0 (\052) @t
-121805 0 (\043\053\052 \054\055\056\053 \041\042 \042\057) @t
-11921 0 (\043\047\062\050\053 \041\051\063\051\054\051\064) @t
95537 0 (\051\065\053\066) @t
T
@rax %Note: Object
124.52457 47.18806 139.19811 47.18920 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
124.52457 47.18863 m
139.19811 47.18863 L
S

@rax %Note: Object
138.72813 45.95471 140.60835 48.42283 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
140.60835 47.18863 m
138.72813 45.95471 L
139.19811 47.18863 L
138.72813 48.42283 L
140.60835 47.18863 L
@c
B

@rax %Note: Object
64.35808 36.61002 124.52457 57.76753 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
64.35808 36.61002 m
124.52457 36.61002 L
124.52457 57.76753 L
64.35808 57.76753 L
64.35808 36.61002 L
@c
B

@rax 65.89729 45.11282 122.71238 49.05609 @E
[0.00021592 0.00000000 0.00000000 0.00028346 94.30716208 45.95462310] @tm
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
e
/_R1336934514926-ArialMT-1 14926.00000 z
-132547 0 (\052) @t
-125850 0 (\043\053\052 \054\055\056\053 \046\065\051 \042\057) @t
-7875 0 (\043\047\062\050\053 \041\051\063\051\054\051\064) @t
99583 0 (\051\065\053\066) @t
T
@rax %Note: Object
140.90910 95.76312 251.03537 116.92063 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
140.90910 95.76312 m
251.03537 95.76312 L
251.03537 116.92063 L
140.90910 116.92063 L
140.90910 95.76312 L
@c
B

@rax 174.95802 104.57376 216.70951 108.29707 @E
[0.00021592 0.00000000 0.00000000 0.00028346 195.83793229 105.19571046] @tm
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
e
/_R1336934514926-ArialMT-1 14926.00000 z
-97687 0 (\046) @t
-89923 0 (\045\047\053\054\042) @t
-48204 0 (\067\051\070\062\050\046\053\051 \062 \042\057) @t
48128 0 (\060\051\052) @t
72455 0 (\050) @t
79124 0 (\042\054) @t
T
@rax %Note: Object
141.17783 66.05433 251.03537 87.21184 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
141.17783 66.05433 m
251.03537 66.05433 L
251.03537 87.21184 L
141.17783 87.21184 L
141.17783 66.05433 L
@c
B

@rax 166.44557 74.73345 225.84387 77.81783 @E
[0.00021592 0.00000000 0.00000000 0.00028346 196.10644788 75.57523341] @tm
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
e
/_R1336934514926-ArialMT-1 14926.00000 z
-138355 0 (\041\051\063\051\054\051\064) @t
-74692 0 (\051\065\053\051 \041\051\063\062) @t
-5048 0 (\042\065\047\071\047 \046 \054\051\062\050) @t
87002 0 (\042 \052) @t
106147 0 (\043\053\052) @t
130053 0 (\047) @t
T
@rax %Note: Object
140.90910 36.61002 250.76665 57.76753 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
140.90910 36.61002 m
250.76665 36.61002 L
250.76665 57.76753 L
140.90910 57.76753 L
140.90910 36.61002 L
@c
B

@rax 191.07638 45.90822 200.69235 48.19720 @E
[0.00021592 0.00000000 0.00000000 0.00028346 195.83793229 45.95462310] @tm
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
e
/_R1336934514926-ArialMT-1 14926.00000 z
-23037 0 (\065\053\072\051\073) @t
14736 0 (\042) @t
T
@rax %Note: Object
39.64706 48.29244 62.87017 65.52539 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
39.64706 65.52539 m
62.87017 48.29244 L
S

@rax %Note: Object
61.99710 47.38280 64.09757 49.67121 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
64.09757 47.38280 m
61.99710 47.52369 L
62.87017 48.29244 L
62.92120 49.67121 L
64.09757 47.38280 L
@c
B

@rax %Note: Object
39.91550 76.69304 62.64709 77.51480 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
39.91550 77.51480 m
62.64709 76.69304 L
S

@rax %Note: Object
62.15301 75.47641 64.05732 77.94482 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
64.05732 76.64343 m
62.15301 75.47641 L
62.64709 76.69304 L
62.20403 77.94482 L
64.05732 76.64343 L
@c
B

@rax %Note: Object
39.91550 88.44605 62.86479 105.24869 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
39.91550 88.44605 m
62.86479 105.24869 L
S

@rax %Note: Object
61.99710 103.86992 64.09502 106.15153 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.75005 0.75005 0.00000 @w
64.09502 106.15153 m
62.91043 103.86992 L
62.86479 105.24869 L
61.99710 106.02454 L
64.09502 106.15153 L
@c
B

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel25Dict 25.0 0
%%+ font ArialMT
%%EOF
